import Head from "next/head";
import path from "path";
import fs from "fs/promises";
import { styled } from "../stitches.config";
import { generateIcs } from "../utils/generate-ics";

const Box = styled("div", {});

const Grid = styled("div", { display: "grid" });

const Card = styled(Box, {
  color: "$slate12",
  borderWidth: "1px",
  borderStyle: "solid",
  borderColor: "$slate7",
  borderRadius: "2px",
  padding: "$2",
  backgroundColor: "$slate4",
  "&:hover": {
    backgroundColor: "$green4",
    borderColor: "$green7",
  },
});

const Table = styled("table", {
  fontFamily: "$system",
  width: "100%",
});
const Td = styled("td", {
  variants: {
    isNumber: {
      true: {
        textAlign: "end",
      },
    },
  },
});

const Text = styled("p", {
  fontFamily: "$system",
});

const Container = styled("div", {
  marginX: "auto",
  paddingX: "$3",

  variants: {
    size: {
      1: {
        maxWidth: "300px",
      },
      2: {
        maxWidth: "585px",
      },
      3: {
        maxWidth: "865px",
      },
    },
  },
});

export async function getStaticProps() {
  if (!process.env.RAPID_API_KEY) {
    console.warn("API key not found");
    return { props: { fixtures: [] } };
  }

  const options = {
    method: "GET",
    headers: {
      "X-RapidAPI-Key": process.env.RAPID_API_KEY,
      "X-RapidAPI-Host": "api-football-v1.p.rapidapi.com",
    },
  };

  const res = await fetch(
    "https://api-football-v1.p.rapidapi.com/v3/fixtures?league=1&season=2022",
    options
  );

  const data = await res.json();

  await generateIcs(data);

  const fixtures = data.response;
  fixtures.sort((a: any, b: any) => {
    return a.fixture.timestamp - b.fixture.timestamp;
  });

  return { props: { fixtures } };
}

export default function Home({ fixtures }: { fixtures: any }) {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Container size="2">
          <Grid
            css={{
              gridTemplateColumns: "auto",
              gridGap: "50px",
            }}
          >
            {fixtures.map((data: any) => (
              <Card key={data.fixture.id}>
                {/* <Text as="h1">{data.fixture.venue.name}</Text> */}
                <Text as="h2">{data.league.round}</Text>
                <Table>
                  <tbody>
                    <tr>
                      <td>
                        {data.teams.home.name}
                        {data.teams.home.winner && " *"}
                      </td>
                      <Td isNumber>{data.goals.home}</Td>
                    </tr>
                    <tr>
                      <td>
                        {data.teams.away.name}
                        {data.teams.away.winner && " *"}
                      </td>
                      <Td isNumber>{data.goals.away}</Td>
                    </tr>
                  </tbody>
                </Table>
              </Card>
            ))}
          </Grid>
        </Container>
      </main>
      <footer></footer>
    </div>
  );
}
